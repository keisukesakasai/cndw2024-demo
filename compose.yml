services:
  otel-collector:
    image: ${OTELCOL_IMG}
    restart: always
    command: ["--config=/etc/otel-collector-config.yaml", "${OTELCOL_ARGS}"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "55679:55679" # zpages extension
      - "4320:4320"

  demo-client:
    build:
      dockerfile: Dockerfile
      context: ./client
    restart: always
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
      - DEMO_SERVER_ENDPOINT=http://demo-server:7080/hello
    depends_on:
      - demo-server

  demo-server:
    build:
      dockerfile: Dockerfile
      context: ./server
    restart: always
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
    ports:
      - "7080"
    depends_on:
      - otel-collector

  opamp-server:
    container_name: opamp-server
    build:
      context: ./opamp-server
      dockerfile: Dockerfile
    ports:
      - 4321:4321
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4321"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    networks:
      - my-network    

  opamp-supervisor:
    container_name: opamp-supervisor
    build:
      context: ./opamp-supervisor
      dockerfile: Dockerfile
    depends_on:
      opamp-server:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - my-network    

networks:
  my-network:
    driver: bridge